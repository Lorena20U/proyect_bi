-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


DROP TABLE IF EXISTS public."BENEFICIOS";

CREATE TABLE IF NOT EXISTS public."BENEFICIOS"
(
    id bigint NOT NULL,
    nombre_beneficio character(50) COLLATE pg_catalog."default",
    is_covered character(15) COLLATE pg_catalog."default",
    quant_limit_on_svc character(15) COLLATE pg_catalog."default",
    explicacion character(150) COLLATE pg_catalog."default",
    is_excel_from_inn_moop character(15) COLLATE pg_catalog."default",
    is_excel_from_onn_moop character(15) COLLATE pg_catalog."default",
    plan_id character(50) COLLATE pg_catalog."default",
    CONSTRAINT "BENEFICIOS_pkey" PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public."CENSO";

CREATE TABLE IF NOT EXISTS public."CENSO"
(
    id bigint NOT NULL,
    rango_edades character(50) COLLATE pg_catalog."default",
    cantidad_rango_edades bigint,
    grado character(50) COLLATE pg_catalog."default",
    cantidad_grado bigint,
    estado_civil character(50) COLLATE pg_catalog."default",
    cantidad_estado_civil bigint,
    etnia character(50) COLLATE pg_catalog."default",
    cantidad_etnia bigint,
    hogar character(50) COLLATE pg_catalog."default",
    cantidad_hogar bigint,
    ingreso_minimo bigint,
    ingreso_maximo bigint,
    cantidad_ingreso bigint,
    CONSTRAINT "CENSO_pkey" PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public."COSTOS";

CREATE TABLE IF NOT EXISTS public."COSTOS"
(
    id bigint NOT NULL,
    beneficio_id bigint,
    copay_inn_tier1 character(15) COLLATE pg_catalog."default",
    copay_inn_tier2 character(15) COLLATE pg_catalog."default",
    copay_out_of_net character(15) COLLATE pg_catalog."default",
    coins_inn_tier1 character(15) COLLATE pg_catalog."default",
    coins_inn_tier2 character(15) COLLATE pg_catalog."default",
    cost_out_of_net character(15) COLLATE pg_catalog."default",
    CONSTRAINT "COSTOS_pkey" PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public."EDADES_SEGUROS";

CREATE TABLE IF NOT EXISTS public."EDADES_SEGUROS"
(
    id bigint NOT NULL,
    plan_id character(50) COLLATE pg_catalog."default",
    edad character(15) COLLATE pg_catalog."default",
    CONSTRAINT "EDADES_SEGUROS_pkey" PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public."FECHAS_TASAS";

CREATE TABLE IF NOT EXISTS public."FECHAS_TASAS"
(
    id bigint NOT NULL,
    edad_seguro_id bigint,
    fecha_efectiva character(15) COLLATE pg_catalog."default",
    fecha_expiracion character(15) COLLATE pg_catalog."default",
    CONSTRAINT "FECHAS_TASAS_pkey" PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public."PERFILES";

CREATE TABLE IF NOT EXISTS public."PERFILES"
(
    id bigint NOT NULL,
    id_censo bigint,
    estado_civil character(50) COLLATE pg_catalog."default",
    etnia character(50) COLLATE pg_catalog."default",
    hogar character(50) COLLATE pg_catalog."default",
    ingreso_minimo bigint,
    ingreso_maximo bigint,
    estado character(50) COLLATE pg_catalog."default",
    CONSTRAINT "PERFILES_pkey" PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public."PLANES";

CREATE TABLE IF NOT EXISTS public."PLANES"
(
    id character(25) COLLATE pg_catalog."default" NOT NULL,
    estado_id bigint,
    nombre_plan character(200) COLLATE pg_catalog."default",
    tipo character(10) COLLATE pg_catalog."default",
    nivel_metal character(15) COLLATE pg_catalog."default",
    nombre_proveedor character(100) COLLATE pg_catalog."default",
    estado character(50) COLLATE pg_catalog."default",
    perfiles_id bigint,
    CONSTRAINT "PLANES_pkey" PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public."TARIFAS_GRUPALES";

CREATE TABLE IF NOT EXISTS public."TARIFAS_GRUPALES"
(
    id bigint NOT NULL,
    fechas_id bigint,
    tarifa_parejas double precision,
    beneficiario_un_dependiente double precision,
    beneficiario_dos_dependientes double precision,
    beneficiario_tres_mas_dependientes double precision,
    pareja_un_dependientes double precision,
    pareja_dos_dependientes double precision,
    pareja_tres_mas_dependientes double precision,
    CONSTRAINT "TARIFAS_GRUPALES_pkey" PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public."TASAS_INDIVIDUALES";

CREATE TABLE IF NOT EXISTS public."TASAS_INDIVIDUALES"
(
    id bigint NOT NULL,
    fechas_id bigint,
    tarifa double precision,
    CONSTRAINT "TASAS_INDIVIDUALES_pkey" PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public."BENEFICIOS"
    ADD CONSTRAINT fk_beneficios_cod_planes FOREIGN KEY (plan_id)
    REFERENCES public."PLANES" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."COSTOS"
    ADD CONSTRAINT fk_costos_cod_beneficios FOREIGN KEY (beneficio_id)
    REFERENCES public."BENEFICIOS" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."EDADES_SEGUROS"
    ADD CONSTRAINT fk_edads_cod_planes FOREIGN KEY (plan_id)
    REFERENCES public."PLANES" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."FECHAS_TASAS"
    ADD CONSTRAINT fk_fechas_cod_edads FOREIGN KEY (edad_seguro_id)
    REFERENCES public."EDADES_SEGUROS" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PERFILES"
    ADD CONSTRAINT fk_perfiles_censo FOREIGN KEY (id_censo)
    REFERENCES public."CENSO" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PLANES"
    ADD CONSTRAINT fk_planes_cod_perfiles FOREIGN KEY (perfiles_id)
    REFERENCES public."PERFILES" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."TARIFAS_GRUPALES"
    ADD CONSTRAINT fk_tarifasg_cod_fechas FOREIGN KEY (fechas_id)
    REFERENCES public."FECHAS_TASAS" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."TASAS_INDIVIDUALES"
    ADD CONSTRAINT fk_tarifasi_cod_fechas FOREIGN KEY (fechas_id)
    REFERENCES public."FECHAS_TASAS" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;